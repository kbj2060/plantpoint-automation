services:
  postgres:
    image: postgres:alpine
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: Asia/Seoul
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  mqtt:
    image: eclipse-mosquitto:latest
    container_name: mqtt
    ports:
      - "${MQTT_BROKER_PORT}:1883"    # MQTT 브로커 포트
    environment:
      TZ: Asia/Seoul
    volumes:
      - mosquitto-data:/mosquitto/data
      - mosquitto-log:/mosquitto/log
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
    environment:
      TZ: Asia/Seoul
    networks:
      - app-network

  backend:
    build:
      context: ./plantpoint-backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "9000:9000"
      - "4000:4000"
    image: kbj2060/plantpoint-backend:latest
    environment:
      NODE_ENV: production
      NEST_PORT: 9000
      SOCKET_PORT: 4000
      DATABASE_URL: ${DATABASE_URL}
      TZ: Asia/Seoul
    depends_on:
      - postgres
      - redis
      - mqtt
    networks:
      - app-network

  frontend:
    build:
      context: ./plantpoint-frontend-vite
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"
    image: kbj2060/plantpoint-frontend:latest
    depends_on:
      - backend
    networks:
      - app-network

  automation:
    build:
      context: ./plantpoint-automation
      dockerfile: Dockerfile
    image: kbj2060/plantpoint-automation:mock-gpio
    container_name: automation
    restart: always
    working_dir: /app
    volumes:
      - ./plantpoint-automation:/app  # 애플리케이션 코드 마운트
      - python-packages:/usr/local/lib/python3.9/site-packages  # 패키지 디렉토리 유지
      - cron-logs:/var/log
    environment:
      - TZ=Asia/Seoul
    networks:
      - app-network

volumes:
  postgres-data:
  mosquitto-data:
  mosquitto-log:
  python-packages:
  cron-logs:

networks:
  app-network:
    driver: bridge

